local a={}a.IsEnabled=Menu.AddOption({"Hero Specific","Arc Warden"},"Enabled","")a.ComboKey=Menu.AddKeyOption({"Hero Specific","Arc Warden"},"Key: Combo",Enum.ButtonCode.KEY_F)a.KeyOnlyHero=Menu.AddKeyOption({"Hero Specific","Arc Warden","Combo Style"},"Key: Mode Only Hero",Enum.ButtonCode.KEY_F1)a.KeyOnlyIll=Menu.AddKeyOption({"Hero Specific","Arc Warden","Combo Style"},"Key: Mode Only Illusion",Enum.ButtonCode.KEY_F2)a.KeyTwoWay=Menu.AddKeyOption({"Hero Specific","Arc Warden","Combo Style"},"Key: Mode Hero + Illusion",Enum.ButtonCode.KEY_F3)a.Mode=0;a.ModeText="Mode: Only Hero"a.MenuItems={atos="Rod of Atos",hex="Scythe of Vyse",satan="Satanic",mjo="Mjollnir",mom="Mask of Madness",bkb="Black King Bar",manta="Manta Style",necros="Necronomicon",diffus="Diffusal Blade",blink="Blink Dagger",blade="Shadow Blade",silver="Silver Edge",eblade="Ethereal blade",veil="Veil of Discrod",dagon="Dagon",orchid="Orchid",blood="Bloodthorn",shiva="Shiva's guard"}a.MenuItemsID={atos,hex,satan,mjo,mom,bkb,manta,necros,diffus,blink,blade,silver,eblade,veil,dagon,orchid,blood,shiva}for b,c in pairs(a.MenuItems)do a.MenuItemsID[b]=Menu.AddOption({"Hero Specific","Arc Warden","Settings","Magic Damage Items Hero"},a.MenuItems[b],"")end;a.MenuItemsIllusionID={atos,hex,satan,mjo,mom,bkb,manta,necros,diffus,blink,blade,silver,eblade,veil,dagon,orchid,blood,shiva}for b,c in pairs(a.MenuItems)do a.MenuItemsIllusionID[b]=Menu.AddOption({"Hero Specific","Arc Warden","Settings","Magic Damage Items Illusion"},a.MenuItems[b],"")end;a.CurrentTime=0;a.FluxStyle=Menu.AddOption({"Hero Specific","Arc Warden","Settings"},"Flux Style","",1,2)a.SparkPrediction=Menu.AddOption({"Hero Specific","Arc Warden","Settings"},"Spark Prediction","",0,2000,100)Menu.SetValueName(a.FluxStyle,1,"Same")Menu.SetValueName(a.FluxStyle,2,"One by one")a.WalkerDelay=Menu.AddOption({"Hero Specific","Arc Warden","Settings","Orb Walker"},"Attack Delay","",2,10,1)a.Walker=Menu.AddOption({"Hero Specific","Arc Warden","Settings","Orb Walker"},"Distance","",200,2000,25)a.IsWalker=Menu.AddOption({"Hero Specific","Arc Warden","Settings","Orb Walker"},"Enabled","")a.UseMidas=Menu.AddOption({"Hero Specific","Arc Warden","Settings"},"Auto Midas","")a.EnemyInRange=Menu.AddOption({"Hero Specific","Arc Warden","Settings"},"Closest to mouse range","",100,900,100)a.MenuAbilities={flux="Flux",magnetic="Magnetic Field",spark="Spark Wraith",ult="Tempest Double"}a.MenuAbilitiesID={flux,magnetic,spark,ult}for b,c in pairs(a.MenuAbilities)do a.MenuAbilitiesID[b]=Menu.AddOption({"Hero Specific","Arc Warden","Settings","Abilities"},a.MenuAbilities[b],"")end;a.MenuIllusionAbilities={flux="Flux",magnetic="Magnetic Field",spark="Spark Wraith"}a.MenuIllusionAbilitiesID={flux,magnetic,spark}for b,c in pairs(a.MenuIllusionAbilities)do a.MenuIllusionAbilitiesID[b]=Menu.AddOption({"Hero Specific","Arc Warden","Settings","Abilities - Tempest"},a.MenuIllusionAbilities[b],"")end;a.IsPopLinkenToggled=Menu.AddOption({"Hero Specific","Arc Warden","Settings","Pop Linkens Items"},"Enabled","")a.MenuLinkens={cyclone="Eul's Scepter of Divinity",atos="Rod of Atos",hex="Scythe of Vyse",forcestaff="Force Staff",hurricane="Hurricane Pike",dagon="Dagon",orchid="Orchid",blood="Bloodthorn",flux="Flux"}a.MenuLinkensID={cyclone,atos,hex,forcestaff,hurricane,dagon,orchid,blood,flux}for b,c in pairs(a.MenuLinkens)do a.MenuLinkensID[b]=Menu.AddOption({"Hero Specific","Arc Warden","Settings","Pop Linkens Items"},a.MenuLinkens[b],"")end;a.IsBMToggled=Menu.AddOption({"Hero Specific","Arc Warden","Settings","Extra"},"Check for BladeMail","")a.IsSRToggled=Menu.AddOption({"Hero Specific","Arc Warden","Settings","Extra"},"Use Soul Ring","")a.Font=Renderer.LoadFont("Arial",17,Enum.FontWeight.BOLD)a.Pause={["combosleep"]=0,["magneticcd"]=0,["illusionattack"]=0,["nextpush"]=0,["searchforunits"]=0,["pushendcheck"]=0,["midasfarm"]=0,["herowaitmom"]=0,["arcsleep"]=0}a.Modifiers={[0]="modifier_medusa_stone_gaze_stone",[1]="modifier_winter_wyvern_winters_curse",[2]="modifier_item_lotus_orb_active"}a.AwaitersItems={["item_sheepstick"]=0.5,["item_veil_of_discord"]=0.2,["item_rod_of_atos"]=0.5,["item_ethereal_blade"]=0.5,["item_orchid"]=0.1,["item_bloodthorn"]=0.1}a.NeedInitialize=false;a.Enemy=nil;a.EnemyPosition=nil;local d={}d.Hero=nil;d.Position=nil;d.UltHero=nil;d.SearchUlt=false;d.MP=nil;d.Skills={[0]=nil,[1]=nil,[2]=nil,[3]=nil}d.UltSkills={[0]=nil,[1]=nil,[2]=nil,[3]=nil}d.UltItems={["atos"]=nil,["sheep"]=nil,["diff"]=nil,["mjo"]=nil,["mom"]=nil,["bkb"]=nil,["satan"]=nil,["discord"]=nil,["ethereal"]=nil,["dagon"]=nil,["orchid"]=nil,["bloodthorn"]=nil,["shivas_guard"]=nil,["dagon"]=nil,["cyclone"]=nil,["soul"]=nil,["blink"]=nil,["blade"]=nil,["silver"]=nil,["necro"]=nil,["manta"]=nil,["midas"]=nil,["tp"]=nil,["hurricane"]=nil,["force"]=nil}d.Items={["atos"]=nil,["sheep"]=nil,["diff"]=nil,["mjo"]=nil,["mom"]=nil,["bkb"]=nil,["satan"]=nil,["discord"]=nil,["ethereal"]=nil,["dagon"]=nil,["orchid"]=nil,["bloodthorn"]=nil,["shivas_guard"]=nil,["dagon"]=nil,["cyclone"]=nil,["soul"]=nil,["blink"]=nil,["necro"]=nil,["manta"]=nil,["midas"]=nil,["hurricane"]=nil,["force"]=nil}function a.Initialize()d.Hero=Heroes.GetLocal()d.MP=NPC.GetMana(d.Hero)for e=0,4 do d.Skills[e]=NPC.GetAbilityByIndex(d.Hero,e)end;d.Items["atos"]=NPC.GetItem(d.Hero,"item_rod_of_atos",true)d.Items["sheep"]=NPC.GetItem(d.Hero,"item_sheepstick",true)d.Items["discord"]=NPC.GetItem(d.Hero,"item_veil_of_discord",true)d.Items["ethereal"]=NPC.GetItem(d.Hero,"item_ethereal_blade",true)d.Items["satan"]=NPC.GetItem(d.Hero,"item_satanic",true)d.Items["dagon"]=NPC.GetItem(d.Hero,"item_dagon",true)d.Items["bkb"]=NPC.GetItem(d.Hero,"item_black_king_bar",true)d.Items["mjo"]=NPC.GetItem(d.Hero,"item_mjollnir",true)if not d.Items["dagon"]then for e=1,5 do d.Items["dagon"]=NPC.GetItem(d.Hero,"item_dagon_"..e,true)if d.Items["dagon"]then break end end end;d.Items["necro"]=NPC.GetItem(d.Hero,"item_necronomicon",true)if not d.Items["necro"]then for e=1,3 do d.Items["necro"]=NPC.GetItem(d.Hero,"item_necronomicon_"..e,true)if d.Items["necro"]then break end end end;d.Items["diff"]=NPC.GetItem(d.Hero,"item_diffusal_blade",true)if not d.Items["diff"]then for e=1,2 do d.Items["diff"]=NPC.GetItem(d.Hero,"item_diffusal_blade_"..e,true)if d.Items["diff"]then break end end end;d.Items["orchid"]=NPC.GetItem(d.Hero,"item_orchid",true)d.Items["bloodthorn"]=NPC.GetItem(d.Hero,"item_bloodthorn",true)d.Items["shivas_guard"]=NPC.GetItem(d.Hero,"item_shivas_guard",true)d.Items["cyclone"]=NPC.GetItem(d.Hero,"item_cyclone",true)d.Items["force"]=NPC.GetItem(d.Hero,"item_force_staff",true)d.Items["hurricane"]=NPC.GetItem(d.Hero,"item_hurricane_pike",true)d.Items["soul"]=NPC.GetItem(d.Hero,"item_soul_ring",true)d.Items["blink"]=NPC.GetItem(d.Hero,"item_blink",true)d.Items["manta"]=NPC.GetItem(d.Hero,"item_manta",true)d.Items["midas"]=NPC.GetItem(d.Hero,"item_hand_of_midas",true)d.Items["mom"]=NPC.GetItem(d.Hero,"item_mask_of_madness",true)if d.SearchUlt then for e=1,NPCs.Count()do local f=NPCs.Get(e)if Entity.GetOwner(d.Hero)==Entity.GetOwner(f)or Entity.OwnedBy(d.Hero,f)then if Entity.IsAlive(f)and NPC.IsIllusion(f)then d.UltHero=f;d.SearchUlt=false;for e=0,3 do d.UltSkills[e]=NPC.GetAbilityByIndex(d.UltHero,e)end;d.UltItems["atos"]=NPC.GetItem(d.UltHero,"item_rod_of_atos",true)d.UltItems["sheep"]=NPC.GetItem(d.UltHero,"item_sheepstick",true)d.UltItems["satan"]=NPC.GetItem(d.UltHero,"item_satanic",true)d.UltItems["discord"]=NPC.GetItem(d.UltHero,"item_veil_of_discord",true)d.UltItems["ethereal"]=NPC.GetItem(d.UltHero,"item_ethereal_blade",true)d.UltItems["bkb"]=NPC.GetItem(d.UltHero,"item_black_king_bar",true)d.UltItems["dagon"]=NPC.GetItem(d.UltHero,"item_dagon",true)d.UltItems["mjo"]=NPC.GetItem(d.UltHero,"item_mjollnir",true)d.UltItems["mom"]=NPC.GetItem(d.UltHero,"item_mask_of_madness",true)if not d.UltItems["dagon"]then for e=1,5 do d.UltItems["dagon"]=NPC.GetItem(d.UltHero,"item_dagon_"..e,true)if d.UltItems["dagon"]then break end end end;d.UltItems["necro"]=NPC.GetItem(d.UltHero,"item_necronomicon",true)if not d.UltItems["necro"]then for e=1,3 do d.UltItems["necro"]=NPC.GetItem(d.UltHero,"item_necronomicon_"..e,true)if d.UltItems["necro"]then break end end end;d.UltItems["tp"]=NPC.GetItem(d.UltHero,"item_travel_boots",true)if not d.UltItems["tp"]then for e=1,3 do d.UltItems["tp"]=NPC.GetItem(d.UltHero,"item_travel_boots_"..e,true)if d.UltItems["tp"]then break end end end;d.UltItems["diff"]=NPC.GetItem(d.UltHero,"item_diffusal_blade",true)if not d.UltItems["diff"]then for e=1,2 do d.UltItems["diff"]=NPC.GetItem(d.UltHero,"item_diffusal_blade_"..e,true)if d.UltItems["diff"]then break end end end;d.UltItems["orchid"]=NPC.GetItem(d.UltHero,"item_orchid",true)d.UltItems["bloodthorn"]=NPC.GetItem(d.UltHero,"item_bloodthorn",true)d.UltItems["shivas_guard"]=NPC.GetItem(d.UltHero,"item_shivas_guard",true)d.UltItems["blade"]=NPC.GetItem(d.UltHero,"item_invis_sword",true)d.UltItems["silver"]=NPC.GetItem(d.UltHero,"item_silver_edge",true)d.UltItems["cyclone"]=NPC.GetItem(d.UltHero,"item_cyclone",true)d.UltItems["force"]=NPC.GetItem(d.UltHero,"item_force_staff",true)d.UltItems["hurricane"]=NPC.GetItem(d.UltHero,"item_hurricane_pike",true)d.UltItems["soul"]=NPC.GetItem(d.UltHero,"item_soul_ring",true)d.UltItems["blink"]=NPC.GetItem(d.UltHero,"item_blink",true)d.UltItems["manta"]=NPC.GetItem(d.UltHero,"item_manta",true)d.UltItems["midas"]=NPC.GetItem(d.UltHero,"item_hand_of_midas",true)end end end end end;function a.OnDraw()a.CurrentTime=GameRules.GetGameTime()if not Menu.IsEnabled(a.IsEnabled)then return end;if Heroes.GetLocal()==nil or not Engine.IsInGame()or d.Hero==nil then a.NeedInitialize=true end;if GameRules.GetGameState()~=5 and GameRules.GetGameState()~=4 then return end;if Engine.IsInGame then if a.NeedInitialize then a.Initialize()end;if NPC.GetUnitName(d.Hero)~="npc_dota_hero_arc_warden"then return end;if Menu.IsKeyDown(a.ComboKey)then a.DoCombo()end;if Menu.IsKeyDownOnce(a.KeyOnlyHero)then a.Mode=0;a.ModeText="Mode: Only Hero"end;if Menu.IsKeyDownOnce(a.KeyOnlyIll)then a.Mode=1;a.ModeText="Mode: Only Illusion"end;if Menu.IsKeyDownOnce(a.KeyTwoWay)then a.Mode=2;a.ModeText="Mode: Two Ways"end;local g,h=Renderer.GetScreenSize()Renderer.SetDrawColor(0,0,0,220)Renderer.DrawFilledRect(math.floor(g-160),0,160,math.floor(h*0.025))Renderer.SetDrawColor(255,255,255,255)Renderer.DrawText(a.Font,math.floor(g-150),math.floor(h*0.004),a.ModeText,false)end end;function a.DoCombo()a.Enemy=Input.GetNearestHeroToCursor(Entity.GetTeamNum(d.Hero),Enum.TeamType.TEAM_ENEMY)if not a.Enemy or not NPC.IsPositionInRange(a.Enemy,Input.GetWorldCursorPos(),Menu.GetValue(a.EnemyInRange),0)then return end;if not a.CheckForModifiers()then return end;a.EnemyPosition=NPC.GetAbsOrigin(a.Enemy)d.Position=NPC.GetAbsOrigin(d.Hero)if NPC.IsLinkensProtected(a.Enemy)and Menu.IsEnabled(a.IsPopLinkenToggled)then a.PopLinkens(d.Items["cyclone"],a.MenuLinkensID["cyclone"])a.PopLinkens(d.Items["force"],a.MenuLinkensID["forcestaff"])a.PopLinkens(d.Items["hurricane"],a.MenuLinkensID["hurricane"])a.PopLinkens(d.Skills[0],a.MenuLinkensID["flux"])a.PopLinkens(d.Items["dagon"],a.MenuLinkensID["dagon"])a.PopLinkens(d.Items["atos"],a.MenuLinkensID["atos"])a.PopLinkens(d.Items["sheep"],a.MenuLinkensID["hex"])a.PopLinkens(d.Items["orchid"],a.MenuLinkensID["orchid"])a.PopLinkens(d.Items["bloodthorn"],a.MenuLinkensID["blood"])else if a.CurrentTime>a.Pause["combosleep"]then if Entity.IsAlive(d.UltHero)and NPC.IsIllusion(d.UltHero)and(a.Mode==1 or a.Mode==2)then a.IllUseItem(d.UltItems["diff"],a.MenuItemsIllusionID["diffus"])end;if a.Mode==0 or a.Mode==2 then if d.Items["soul"]and Menu.IsEnabled(a.IsSRToggled)and Ability.IsReady(d.Items["soul"])then Ability.CastNoTarget(d.Items["soul"])end;if not NPC.HasState(a.Enemy,Enum.ModifierState.MODIFIER_STATE_HEXED)and not NPC.HasState(a.Enemy,Enum.ModifierState.MODIFIER_STATE_STUNNED)then a.UseItem(d.Items["sheep"],a.MenuItemsID["hex"])end;if not NPC.HasModifier(a.Enemy,"modifier_orchid_malevolence_debuff")then a.UseItem(d.Items["orchid"],a.MenuItemsID["orchid"])end;if not NPC.HasModifier(a.Enemy,"modifier_bloodthorn_debuff")then a.UseItem(d.Items["bloodthorn"],a.MenuItemsID["blood"])end;a.CastAbility(d.Skills[0],a.MenuAbilitiesID["flux"])a.UseItem(d.Items["bkb"],a.MenuItemsID["bkb"])a.UseItem(d.Items["satan"],a.MenuItemsID["satan"])a.UseItem(d.Items["mjo"],a.MenuItemsID["mjo"])a.UseItem(d.Items["necro"],a.MenuItemsID["necros"])a.UseItem(d.Items["shivas_guard"],a.MenuItemsID["shiva"])a.UseItem(d.Items["manta"],a.MenuItemsID["manta"])end;if a.Mode==2 or a.Mode==1 then a.CastAbility(d.Skills[3],a.MenuAbilitiesID["ult"])end;if Entity.IsAlive(d.UltHero)and NPC.IsIllusion(d.UltHero)and(a.Mode==1 or a.Mode==2)then if not NPC.HasState(a.Enemy,Enum.ModifierState.MODIFIER_STATE_HEXED)and not NPC.HasState(a.Enemy,Enum.ModifierState.MODIFIER_STATE_STUNNED)then a.IllUseItem(d.UltItems["sheep"],a.MenuItemsIllusionID["hex"])end;if not NPC.HasModifier(a.Enemy,"modifier_orchid_malevolence_debuff")then a.IllUseItem(d.UltItems["orchid"],a.MenuItemsIllusionID["orchid"])end;if not NPC.HasModifier(a.Enemy,"modifier_bloodthorn_debuff")then a.IllUseItem(d.UltItems["bloodthorn"],a.MenuItemsIllusionID["blood"])end;if not NPC.HasModifier(a.Enemy,"modifier_arc_warden_flux")or Menu.GetValue(a.FluxStyle)==1 then a.IllCastAbility(d.UltSkills[0],a.MenuIllusionAbilitiesID["flux"])end end;if a.Mode==0 or a.Mode==2 then if not Ability.IsReady(d.Skills[0])or not Menu.IsEnabled(a.MenuAbilitiesID["flux"])then a.CastAbility(d.Skills[2],a.MenuAbilitiesID["spark"])end end;if Entity.IsAlive(d.UltHero)and NPC.IsIllusion(d.UltHero)and(a.Mode==1 or a.Mode==2)then if not Ability.IsReady(d.UltSkills[0])or not Menu.IsEnabled(a.MenuIllusionAbilitiesID["flux"])then a.IllCastAbility(d.UltSkills[2],a.MenuIllusionAbilitiesID["spark"])end end;if a.Mode==0 or a.Mode==2 then if not NPC.HasModifier(d.Hero,"modifier_arc_warden_magnetic_field")and a.CurrentTime>a.Pause["magneticcd"]then a.CastAbility(d.Skills[1],a.MenuAbilitiesID["magnetic"])end;if a.CurrentTime>a.Pause["herowaitmom"]or a.Pause["herowaitmom"]==nil then a.UseItem(d.Items["mom"],a.MenuItemsID["mom"])end end;if Entity.IsAlive(d.UltHero)and NPC.IsIllusion(d.UltHero)and(a.Mode==1 or a.Mode==2)then a.IllUseItem(d.UltItems["blink"],a.MenuItemsIllusionID["blink"])a.IllUseItem(d.UltItems["bkb"],a.MenuItemsIllusionID["bkb"])a.IllUseItem(d.UltItems["satan"],a.MenuItemsIllusionID["satan"])if a.Mode==1 then if not NPC.HasModifier(d.UltHero,"modifier_arc_warden_magnetic_field")and a.CurrentTime>a.Pause["magneticcd"]then a.IllCastAbility(d.UltSkills[1],a.MenuIllusionAbilitiesID["magnetic"])end else if not NPC.HasModifier(d.Hero,"modifier_arc_warden_magnetic_field")and a.CurrentTime>a.Pause["magneticcd"]then a.IllCastAbility(d.UltSkills[1],a.MenuIllusionAbilitiesID["magnetic"])end end;if not NPC.HasModifier(a.Enemy,"modifier_item_veil_of_discord_debuff")then a.IllUseItem(d.UltItems["discord"],a.MenuItemsIllusionID["veil"])end;if not NPC.HasModifier(a.Enemy,"modifier_item_ethereal_blade_slow")then a.IllUseItem(d.UltItems["ethereal"],a.MenuItemsIllusionID["eblade"])end;if not NPC.HasModifier(a.Enemy,"modifier_rod_of_atos_debuff")then a.IllUseItem(d.UltItems["atos"],a.MenuItemsIllusionID["atos"])end;a.IllUseItem(d.UltItems["mjo"],a.MenuItemsIllusionID["mjo"])a.IllUseItem(d.UltItems["dagon"],a.MenuItemsIllusionID["dagon"])a.IllUseItem(d.UltItems["shivas_guard"],a.MenuItemsIllusionID["shiva"])a.IllUseItem(d.UltItems["manta"],a.MenuItemsIllusionID["manta"])a.IllUseItem(d.UltItems["blade"],a.MenuItemsIllusionID["blade"])a.IllUseItem(d.UltItems["silver"],a.MenuItemsIllusionID["silver"])if a.CurrentTime>a.Pause["illwaitmom"]or a.Pause["illwaitmom"]==nil then a.IllUseItem(d.UltItems["mom"],a.MenuItemsIllusionID["mom"])end end;if a.Mode==0 or a.Mode==2 then if NPC.HasModifier(a.Enemy,"modifier_ghost_state")or NPC.HasModifier(a.Enemy,"modifier_item_ethereal_blade_ethereal")or NPC.HasModifier(a.Enemy,"modifier_eul_cyclone")or NPC.HasModifier(a.Enemy,"modifier_item_glimmer_cape_fade")then a.UseItem(d.Items["diff"],a.MenuItemsID["diffus"])end;if not NPC.HasModifier(a.Enemy,"modifier_item_veil_of_discord_debuff")then a.UseItem(d.Items["discord"],a.MenuItemsID["veil"])end;if not NPC.HasModifier(a.Enemy,"modifier_item_ethereal_blade_slow")then a.UseItem(d.Items["ethereal"],a.MenuItemsID["eblade"])end;if not NPC.HasModifier(a.Enemy,"modifier_rod_of_atos_debuff")then a.UseItem(d.Items["atos"],a.MenuItemsID["atos"])end;for b,c in pairs(NPC.GetModifiers(a.Enemy))do Log.Write(Modifier.GetName(c))end;a.UseItem(d.Items["dagon"],a.MenuItemsID["dagon"])end;if Menu.IsEnabled(a.IsWalker)then OrbWalk()end;a.Sleep("combosleep",0.05)end end end;a.Test=false;function OrbWalk()local i={[0]=d.UltHero,[1]=d.Hero}local j=Entity.GetOrigin(a.Enemy)for k=0,1 do if Entity.IsAlive(i[k])and not Entity.IsDormant(i[k])and not NPC.IsStunned(i[k])and not NPC.HasModifier(i[k],"modifier_teleporting")then local l=j:Distance(Entity.GetOrigin(i[k])):Length()local m=Menu.GetValue(a.Walker)local n=Entity.GetIndex(i[k])if k==0 and(a.Mode==2 or a.Mode==1)or k==1 and(a.Mode==2 or a.Mode==0)then if l<NPC.GetAttackRange(i[k])and(a.Pause["nextattack"..n]==nil or a.CurrentTime>a.Pause["nextattack"..n])then Player.PrepareUnitOrders(Players.GetLocal(),Enum.UnitOrder.DOTA_UNIT_ORDER_ATTACK_TARGET,a.Enemy,a.EnemyPosition,nil,Enum.PlayerOrderIssuer.DOTA_ORDER_ISSUER_PASSED_UNIT_ONLY,i[k],false,false)a.Sleep("canselattack"..n,Menu.GetValue(a.WalkerDelay)*0.1)a.Sleep("nextattack"..n,NPC.GetAttackTime(i[k]))end;if l>m and(a.Pause["canselattack"..n]==nil or a.CurrentTime>a.Pause["canselattack"..n])then Player.PrepareUnitOrders(Players.GetLocal(),Enum.UnitOrder.DOTA_UNIT_ORDER_MOVE_TO_TARGET,a.Enemy,a.EnemyPosition,nil,Enum.PlayerOrderIssuer.DOTA_ORDER_ISSUER_PASSED_UNIT_ONLY,i[k],false,false)else end end end end end;function a.OnParticleCreate(o)if o.name=="arc_warden_tempest_cast"then if NPC.GetUnitName(o.entity)=="npc_dota_hero_arc_warden"then d.SearchUlt=true;a.Test=true;for e=0,2 do d.UltSkills[e]=NPC.GetAbilityByIndex(d.UltHero,e)end end end end;function a.OnUpdate()if a.CurrentTime==nil then return end;if a.CurrentTime>a.Pause["midasfarm"]and Menu.IsEnabled(a.UseMidas)then CastMidas()a.Sleep("midasfarm",1)end end;function CastMidas()local i={[0]={["hero"]=d.UltHero,["item"]=d.UltItems["midas"]},[1]={["hero"]=d.Hero,["item"]=d.Items["midas"]}}for k=0,1 do if Entity.IsAlive(i[k]["hero"])and not Entity.IsDormant(i[k]["hero"])and not NPC.IsStunned(i[k]["hero"])and i[k]["item"]and Ability.IsReady(i[k]["item"])and not NPC.HasModifier(i[k]["hero"],"modifier_teleporting")then for p,g in pairs(NPC.GetUnitsInRadius(i[k]["hero"],600,Enum.TeamType.TEAM_ENEMY))do if not NPC.IsAncient(g)then Player.PrepareUnitOrders(Players.GetLocal(),Enum.UnitOrder.DOTA_UNIT_ORDER_CAST_TARGET,g,Vector(0,0,0),i[k]["item"],Enum.PlayerOrderIssuer.DOTA_ORDER_ISSUER_PASSED_UNIT_ONLY,i[k]["hero"],false,false)end;return end end end end;function a.Predict(q,r,s)s=500;local t=Entity.GetRotation(q):GetVectors()if t then local k=r:GetX()+t:GetX()*s/1000*300;local u=r:GetY()+t:GetY()*s/1000*300;return Vector(k,u,0)end end;function a.InFront(s)local t=Entity.GetRotation(a.Enemy):GetVectors()if t then local k=a.EnemyPosition:GetX()+t:GetX()*s/1000*NPC.GetMoveSpeed(a.Enemy)local u=a.EnemyPosition:GetY()+t:GetY()*s/1000*NPC.GetMoveSpeed(a.Enemy)return Vector(k,u,0)end end;function a.IllCastAbility(v,w)if v and Menu.IsEnabled(w)and Ability.IsReady(v)and Ability.IsCastable(v,NPC.GetMana(d.UltHero))then a.Sleep("illwaitmom",0.1)if a.Pause[Ability.GetName(v)]~=nil then if a.CurrentTime<=a.Pause[Ability.GetName(v)]then return end end;if v==d.UltSkills[0]then Player.PrepareUnitOrders(Players.GetLocal(),Enum.UnitOrder.DOTA_UNIT_ORDER_CAST_TARGET,a.Enemy,a.EnemyPosition,v,Enum.PlayerOrderIssuer.DOTA_ORDER_ISSUER_PASSED_UNIT_ONLY,d.UltHero,false,false)elseif v==d.UltSkills[1]then if a.Mode==1 then Player.PrepareUnitOrders(Players.GetLocal(),Enum.UnitOrder.DOTA_UNIT_ORDER_CAST_POSITION,a.Enemy,a.Predict(d.UltHero,NPC.GetAbsOrigin(d.UltHero),100),v,Enum.PlayerOrderIssuer.DOTA_ORDER_ISSUER_PASSED_UNIT_ONLY,d.UltHero,false,false)else Player.PrepareUnitOrders(Players.GetLocal(),Enum.UnitOrder.DOTA_UNIT_ORDER_CAST_POSITION,a.Enemy,a.Predict(d.Hero,d.Position,100),v,Enum.PlayerOrderIssuer.DOTA_ORDER_ISSUER_PASSED_UNIT_ONLY,d.UltHero,false,false)end;a.Sleep("magneticcd",0.5)elseif v==d.UltSkills[2]then Player.PrepareUnitOrders(Players.GetLocal(),Enum.UnitOrder.DOTA_UNIT_ORDER_CAST_POSITION,a.Enemy,a.InFront(Menu.GetValue(a.SparkPrediction)),v,Enum.PlayerOrderIssuer.DOTA_ORDER_ISSUER_PASSED_UNIT_ONLY,d.UltHero,false,false)end end end;function a.IllUseItem(x,w)if x and Menu.IsEnabled(w)and Ability.IsReady(x)and Ability.IsCastable(x,NPC.GetMana(d.UltHero))then if a.Pause[Ability.GetName(x)]~=nil then if a.CurrentTime<=a.Pause[Ability.GetName(x)]then return end end;for b,c in pairs(a.AwaitersItems)do if Ability.GetName(x)==b then a.Sleep(Ability.GetName(x),c)end;if Ability.GetName(x)=="item_sheepstick"then a.Sleep("item_orchid",0.5)a.Sleep("item_bloodthorn",0.5)end end;if x==d.UltItems["shivas_guard"]then Player.PrepareUnitOrders(Players.GetLocal(),Enum.UnitOrder.DOTA_UNIT_ORDER_CAST_NO_TARGET,a.Enemy,a.EnemyPosition,x,Enum.PlayerOrderIssuer.DOTA_ORDER_ISSUER_PASSED_UNIT_ONLY,d.UltHero,false,false)return elseif x==d.UltItems["discord"]then Player.PrepareUnitOrders(Players.GetLocal(),Enum.UnitOrder.DOTA_UNIT_ORDER_CAST_POSITION,a.Enemy,a.EnemyPosition,x,Enum.PlayerOrderIssuer.DOTA_ORDER_ISSUER_PASSED_UNIT_ONLY,d.UltHero,false,false)return elseif x==d.UltItems["dagon"]then Player.PrepareUnitOrders(Players.GetLocal(),Enum.UnitOrder.DOTA_UNIT_ORDER_CAST_TARGET,a.Enemy,a.EnemyPosition,x,Enum.PlayerOrderIssuer.DOTA_ORDER_ISSUER_PASSED_UNIT_ONLY,d.UltHero,false,false)return elseif x==d.UltItems["blink"]then Player.PrepareUnitOrders(Players.GetLocal(),Enum.UnitOrder.DOTA_UNIT_ORDER_CAST_POSITION,a.Enemy,a.EnemyPosition,x,Enum.PlayerOrderIssuer.DOTA_ORDER_ISSUER_PASSED_UNIT_ONLY,d.UltHero,false,false)return elseif x==d.UltItems["blade"]then Player.PrepareUnitOrders(Players.GetLocal(),Enum.UnitOrder.DOTA_UNIT_ORDER_CAST_NO_TARGET,a.Enemy,a.EnemyPosition,x,Enum.PlayerOrderIssuer.DOTA_ORDER_ISSUER_PASSED_UNIT_ONLY,d.UltHero,false,false)return elseif x==d.UltItems["silver"]then Player.PrepareUnitOrders(Players.GetLocal(),Enum.UnitOrder.DOTA_UNIT_ORDER_CAST_NO_TARGET,a.Enemy,a.EnemyPosition,x,Enum.PlayerOrderIssuer.DOTA_ORDER_ISSUER_PASSED_UNIT_ONLY,d.UltHero,false,false)return elseif x==d.UltItems["necro"]then Player.PrepareUnitOrders(Players.GetLocal(),Enum.UnitOrder.DOTA_UNIT_ORDER_CAST_NO_TARGET,a.Enemy,a.EnemyPosition,x,Enum.PlayerOrderIssuer.DOTA_ORDER_ISSUER_PASSED_UNIT_ONLY,d.UltHero,false,false)return elseif x==d.UltItems["manta"]then Player.PrepareUnitOrders(Players.GetLocal(),Enum.UnitOrder.DOTA_UNIT_ORDER_CAST_NO_TARGET,a.Enemy,a.EnemyPosition,x,Enum.PlayerOrderIssuer.DOTA_ORDER_ISSUER_PASSED_UNIT_ONLY,d.UltHero,false,false)return elseif x==d.UltItems["bkb"]then Player.PrepareUnitOrders(Players.GetLocal(),Enum.UnitOrder.DOTA_UNIT_ORDER_CAST_NO_TARGET,a.Enemy,a.EnemyPosition,x,Enum.PlayerOrderIssuer.DOTA_ORDER_ISSUER_PASSED_UNIT_ONLY,d.UltHero,false,false)return elseif x==d.UltItems["satan"]then Player.PrepareUnitOrders(Players.GetLocal(),Enum.UnitOrder.DOTA_UNIT_ORDER_CAST_NO_TARGET,a.Enemy,a.EnemyPosition,x,Enum.PlayerOrderIssuer.DOTA_ORDER_ISSUER_PASSED_UNIT_ONLY,d.UltHero,false,false)return elseif x==d.UltItems["mom"]then Player.PrepareUnitOrders(Players.GetLocal(),Enum.UnitOrder.DOTA_UNIT_ORDER_CAST_NO_TARGET,a.Enemy,a.EnemyPosition,x,Enum.PlayerOrderIssuer.DOTA_ORDER_ISSUER_PASSED_UNIT_ONLY,d.UltHero,false,false)return elseif x==d.UltItems["mjo"]then Player.PrepareUnitOrders(Players.GetLocal(),Enum.UnitOrder.DOTA_UNIT_ORDER_CAST_TARGET,d.UltHero,a.EnemyPosition,x,Enum.PlayerOrderIssuer.DOTA_ORDER_ISSUER_PASSED_UNIT_ONLY,d.UltHero,false,false)return else Player.PrepareUnitOrders(Players.GetLocal(),Enum.UnitOrder.DOTA_UNIT_ORDER_CAST_TARGET,a.Enemy,a.EnemyPosition,x,Enum.PlayerOrderIssuer.DOTA_ORDER_ISSUER_PASSED_UNIT_ONLY,d.UltHero,false,false)return end end end;function a.CastAbility(v,w)if v and Menu.IsEnabled(w)and Ability.IsReady(v)and Ability.IsCastable(v,d.MP)and(NPC.IsEntityInRange(d.Hero,a.Enemy,Ability.GetCastRange(v))or v==d.Skills[3])then a.Sleep("herowaitmom",0.1)if v==d.Skills[0]then Ability.CastTarget(v,a.Enemy)a.Sleep(Ability.GetName(v),0.1)elseif v==d.Skills[1]then Ability.CastPosition(v,a.Predict(d.Hero,d.Position,100))a.Sleep("magneticcd",0.5)elseif v==d.Skills[2]then Ability.CastPosition(v,a.InFront(Menu.GetValue(a.SparkPrediction)))elseif v==d.Skills[3]then Ability.CastNoTarget(v)end end end;function a.UseItem(x,w)if x and(Menu.IsEnabled(w)or w==nil)and Ability.IsReady(x)and Ability.IsCastable(x,d.MP)then if a.Pause[Ability.GetName(x)]~=nil then if a.CurrentTime<=a.Pause[Ability.GetName(x)]then return end end;for b,c in pairs(a.AwaitersItems)do if Ability.GetName(x)==b then a.Sleep(Ability.GetName(x),c)end end;if Ability.GetName(x)=="item_sheepstick"then a.Sleep("item_orchid",0.5)a.Sleep("item_bloodthorn",0.5)end;if x==d.Items["shivas_guard"]then Ability.CastNoTarget(x)return elseif x==d.Items["necro"]then Ability.CastNoTarget(x)return elseif x==d.Items["bkb"]then Ability.CastNoTarget(x)return elseif x==d.Items["satan"]then Ability.CastNoTarget(x)return elseif x==d.Items["manta"]then Ability.CastNoTarget(x)return elseif x==d.Items["mom"]then Ability.CastNoTarget(x)return elseif x==d.Items["discord"]and NPC.IsEntityInRange(d.Hero,a.Enemy,Ability.GetCastRange(x))then Ability.CastPosition(x,a.EnemyPosition)return elseif x==d.Items["dagon"]and NPC.IsEntityInRange(d.Hero,a.Enemy,Ability.GetCastRange(x))then Ability.CastTarget(x,a.Enemy)return elseif x==d.Items["mjo"]then Ability.CastTarget(x,d.Hero)return else if NPC.IsEntityInRange(d.Hero,a.Enemy,Ability.GetCastRange(x))then Ability.CastTarget(x,a.Enemy)end;return end end end;function a.PopLinkens(x,w)if x and Menu.IsEnabled(w)and Ability.IsCastable(x,Ability.GetManaCost(x))then Ability.CastTarget(x,a.Enemy,false)end end;function InArray(y,z)for A,B in pairs(y)do if B==z then return true end end;return false end;function Length(C)count=0;for b,c in pairs(C)do count=count+1 end;return count end;function a.CheckForModifiers()if Menu.IsEnabled(a.IsBMToggled)and NPC.HasModifier(a.Enemy,"modifier_item_blade_mail_reflect")then return false end;for e=0,2 do if NPC.HasModifier(a.Enemy,a.Modifiers[e])then return false end end;return true end;function a.Sleep(D,E)a.Pause[D]=a.CurrentTime+NetChannel.GetAvgLatency(Enum.Flow.FLOW_OUTGOING)+E end;return a